name: GitHub App Token Test

on:
  push:
    branches:
      - main

jobs:
  generate-token:
    runs-on: ubuntu-latest
    steps:
      - name: Generate JWT and Installation Token
        id: generate_token
        env:
          APP_ID: 1033286
          INSTALLATION_ID: 56284975
          APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}
        run: |
          # Create a temporary file for the private key
          echo "$APP_PRIVATE_KEY" > private_key.pem
          cat private_key.pem

          # Get the current time and expiration time
          ISSUED_AT=$(date +%s)
          EXPIRATION=$(($ISSUED_AT + 600))

          # Create JWT header and payload
          HEADER=$(echo -n '{"alg":"RS256","typ":"JWT"}' | base64 -w0 | tr '+/' '-_' | tr -d '=')
          PAYLOAD=$(echo -n "{\"iat\":$ISSUED_AT,\"exp\":$EXPIRATION,\"iss\":$APP_ID}" | base64 -w0 | tr '+/' '-_' | tr -d '=')

          # Generate signature
          SIGNATURE=$(echo -n "$HEADER.$PAYLOAD" | openssl dgst -sha256 -sign private_key.pem | base64 -w0 | tr '+/' '-_' | tr -d '=')

          # Combine JWT
          JWT="$HEADER.$PAYLOAD.$SIGNATURE"

          # Get installation token
          TOKEN_RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $JWT" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/app/installations/$INSTALLATION_ID/access_tokens")

          echo "Token Response: ${TOKEN_RESPONSE}"

          # Extract token using grep and cut since jq isn't installed by default
          INSTALLATION_TOKEN=$(echo "$TOKEN_RESPONSE" | jq -r .token)

          echo "INSTALLATION TOKEN: ${INSTALLATION_TOKEN}"

          # Remove private key file
          # rm private_key.pem

          # Set output
          echo "token=$INSTALLATION_TOKEN" >> $GITHUB_OUTPUT

          # Mask the token in logs
          echo "::add-mask::$INSTALLATION_TOKEN"

          echo "Token generated successfully!"

      # Optional: Test the token (uncomment and modify as needed)
      - name: Test GitHub API Request
        env:
          INSTALLATION_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          curl -H "Authorization: Bearer $INSTALLATION_TOKEN" \
               -H "Accept: application/vnd.github+json" \
               https://api.github.com/repos/gurneesh9/test-gh-action/actions/workflows
